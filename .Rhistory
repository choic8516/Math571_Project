#the following 2 lines are to store the section and date as character
#in de data frame instead as a factor
headlines$section_name<-as.character(headlines$section_name)
headlines$pub_date<-substr(as.character(headlines$pub_date),1,10)
nyt.df<-rbind(nyt.df,headlines)
log.data<-c(year,month,head.class,length(headlines$pub_date))
print(log.data)
write(paste(year,month,head.class,length(headlines$pub_date),format(Sys.time()
, "%Y-%m-%d %H:%M")),"data_test/data_log.txt",append = T)
}
#I identify the headlines from the "Business" category
bus.indexes1<-str_detect(tolower(nyt.df$section_name), "business")
bus.indexes1[is.na(bus.indexes1)]<-F
bus.indexes2<-str_detect(tolower(nyt.df$news_desk), "(business|financial)")
bus.indexes2[is.na(bus.indexes2)]<-F
bus.indexes3<-str_detect(tolower(nyt.df$kicker), "(business|financial)")
bus.indexes3[is.na(bus.indexes3)]<-F
bus.indexes<-bus.indexes1 | bus.indexes2 | bus.indexes3
#I create a subset of the data frame with only the business headlines
nyt.df.bus<-nyt.df[bus.indexes,]
write.csv(nyt.df,paste0("data_test/nyt_headlines_",year,".csv"))
write.csv(nyt.df.bus,paste0("data_test/nyt_headlines_bus_",year,".csv"))
}
ds.used<-character()
for (year in c(2017:2017)){
#I create the empty data frame for the headlines
nyt.df<-data.frame()
for (month in c(10:12)){
url.nyt.archive<-paste0("https://api.nytimes.com/svc/archive/v1/",year,"/"
,month,".json","?api-key=",nyt.API.key)
df.json<-fromJSON(url.nyt.archive)
#I extract the headlines from the json file
#headlines<-df.json$response$docs$headline #use this until 2005
#The structure of df.json$response$docs$headline changes in 1995-03
#(a new column appears)so we need the following line to make it consistent
#Until 2005 use the following lines
headlines<-df.json$response$docs$headline[1:2]
#As of 2006 the structure of the data follows an irregular pattern
#some months the headlines are presented as data frame
#and other months as nested lists. So we need the following conditional
#structure to deal with different data types
head.class<-class(headlines)
if (head.class=="data.frame"){
section<-df.json$response$docs$section_name
ifelse(year=="2017"&(month %in% c("2","8","9","10")),
news.desk<-df.json$response$docs$new_desk,
news.desk<-df.json$response$docs$news_desk)
length(df.json$response$docs$new_desk)
#class(df.json$response$docs$new_desk)
date.pub<-ymd_hms(df.json$response$docs$pub_date)
}
if (head.class=="list"){
list.processed<-sapply(df.json$response$docs$headline,
function(l) c(l$main,l$kicker)[1:2])
headlines<-plyr::ldply(list.processed, rbind)
dims<-sapply(list.processed,FUN = length)
missing.headlines<-which(dims!=2)
section<-df.json$response$docs$section_name[-missing.headlines]
date.pub<-ymd_hms(df.json$response$docs$pub_date)[-missing.headlines]
news.desk<-df.json$response$docs$news_desk[-missing.headlines]
}
#I want to keep track of the data structures used
ds.used<-c(ds.used,paste0(year,"-",month," ",head.class))
#I extract the date and section name and add it to the data frame
headlines<-cbind(headlines,section, date.pub,news.desk)
colnames(headlines)<-c("main","kicker","section_name","pub_date","news_desks")
#the following 2 lines are to store the section and date as character
#in de data frame instead as a factor
headlines$section_name<-as.character(headlines$section_name)
headlines$pub_date<-substr(as.character(headlines$pub_date),1,10)
nyt.df<-rbind(nyt.df,headlines)
log.data<-c(year,month,head.class,length(headlines$pub_date))
print(log.data)
write(paste(year,month,head.class,length(headlines$pub_date),format(Sys.time()
, "%Y-%m-%d %H:%M")),"data_test/data_log.txt",append = T)
}
#I identify the headlines from the "Business" category
bus.indexes1<-str_detect(tolower(nyt.df$section_name), "business")
bus.indexes1[is.na(bus.indexes1)]<-F
bus.indexes2<-str_detect(tolower(nyt.df$news_desk), "(business|financial)")
bus.indexes2[is.na(bus.indexes2)]<-F
bus.indexes3<-str_detect(tolower(nyt.df$kicker), "(business|financial)")
bus.indexes3[is.na(bus.indexes3)]<-F
bus.indexes<-bus.indexes1 | bus.indexes2 | bus.indexes3
#I create a subset of the data frame with only the business headlines
nyt.df.bus<-nyt.df[bus.indexes,]
write.csv(nyt.df,paste0("data_test/nyt_headlines_",year,".csv"))
write.csv(nyt.df.bus,paste0("data_test/nyt_headlines_bus_",year,".csv"))
}
month
year==2017
year==2017&(month==2|month>=8)
month
ds.used<-character()
for (year in c(2017:2017)){
#I create the empty data frame for the headlines
nyt.df<-data.frame()
for (month in c(10:12)){
url.nyt.archive<-paste0("https://api.nytimes.com/svc/archive/v1/",year,"/"
,month,".json","?api-key=",nyt.API.key)
df.json<-fromJSON(url.nyt.archive)
#I extract the headlines from the json file
#headlines<-df.json$response$docs$headline #use this until 2005
#The structure of df.json$response$docs$headline changes in 1995-03
#(a new column appears)so we need the following line to make it consistent
#Until 2005 use the following lines
headlines<-df.json$response$docs$headline[1:2]
#As of 2006 the structure of the data follows an irregular pattern
#some months the headlines are presented as data frame
#and other months as nested lists. So we need the following conditional
#structure to deal with different data types
head.class<-class(headlines)
if (head.class=="data.frame"){
section<-df.json$response$docs$section_name
ifelse(year==2017&(month==2|month>=8)#month %in% c("2","8","9","10","11","12")
news.desk<-df.json$response$docs$new_desk,
ds.used<-character()
for (year in c(2017:2017)){
#I create the empty data frame for the headlines
nyt.df<-data.frame()
for (month in c(10:12)){
url.nyt.archive<-paste0("https://api.nytimes.com/svc/archive/v1/",year,"/"
,month,".json","?api-key=",nyt.API.key)
df.json<-fromJSON(url.nyt.archive)
#I extract the headlines from the json file
#headlines<-df.json$response$docs$headline #use this until 2005
#The structure of df.json$response$docs$headline changes in 1995-03
#(a new column appears)so we need the following line to make it consistent
#Until 2005 use the following lines
headlines<-df.json$response$docs$headline[1:2]
#As of 2006 the structure of the data follows an irregular pattern
#some months the headlines are presented as data frame
#and other months as nested lists. So we need the following conditional
#structure to deal with different data types
head.class<-class(headlines)
if (head.class=="data.frame"){
section<-df.json$response$docs$section_name
ifelse(year==2017&(month==2|month>=8),#month %in% c("2","8","9","10","11","12")
news.desk<-df.json$response$docs$new_desk,
news.desk<-df.json$response$docs$news_desk)
length(df.json$response$docs$new_desk)
#class(df.json$response$docs$new_desk)
date.pub<-ymd_hms(df.json$response$docs$pub_date)
}
if (head.class=="list"){
list.processed<-sapply(df.json$response$docs$headline,
function(l) c(l$main,l$kicker)[1:2])
headlines<-plyr::ldply(list.processed, rbind)
dims<-sapply(list.processed,FUN = length)
missing.headlines<-which(dims!=2)
section<-df.json$response$docs$section_name[-missing.headlines]
date.pub<-ymd_hms(df.json$response$docs$pub_date)[-missing.headlines]
news.desk<-df.json$response$docs$news_desk[-missing.headlines]
}
#I want to keep track of the data structures used
ds.used<-c(ds.used,paste0(year,"-",month," ",head.class))
#I extract the date and section name and add it to the data frame
headlines<-cbind(headlines,section, date.pub,news.desk)
colnames(headlines)<-c("main","kicker","section_name","pub_date","news_desks")
#the following 2 lines are to store the section and date as character
#in de data frame instead as a factor
headlines$section_name<-as.character(headlines$section_name)
headlines$pub_date<-substr(as.character(headlines$pub_date),1,10)
nyt.df<-rbind(nyt.df,headlines)
log.data<-c(year,month,head.class,length(headlines$pub_date))
print(log.data)
write(paste(year,month,head.class,length(headlines$pub_date),format(Sys.time()
, "%Y-%m-%d %H:%M")),"data_test/data_log.txt",append = T)
}
#I identify the headlines from the "Business" category
bus.indexes1<-str_detect(tolower(nyt.df$section_name), "business")
bus.indexes1[is.na(bus.indexes1)]<-F
bus.indexes2<-str_detect(tolower(nyt.df$news_desk), "(business|financial)")
bus.indexes2[is.na(bus.indexes2)]<-F
bus.indexes3<-str_detect(tolower(nyt.df$kicker), "(business|financial)")
bus.indexes3[is.na(bus.indexes3)]<-F
bus.indexes<-bus.indexes1 | bus.indexes2 | bus.indexes3
#I create a subset of the data frame with only the business headlines
nyt.df.bus<-nyt.df[bus.indexes,]
write.csv(nyt.df,paste0("data_test/nyt_headlines_",year,".csv"))
write.csv(nyt.df.bus,paste0("data_test/nyt_headlines_bus_",year,".csv"))
}
ds.used<-character()
for (year in c(2017:2017)){
#I create the empty data frame for the headlines
nyt.df<-data.frame()
for (month in c(1:12)){
url.nyt.archive<-paste0("https://api.nytimes.com/svc/archive/v1/",year,"/"
,month,".json","?api-key=",nyt.API.key)
df.json<-fromJSON(url.nyt.archive)
#I extract the headlines from the json file
#headlines<-df.json$response$docs$headline #use this until 2005
#The structure of df.json$response$docs$headline changes in 1995-03
#(a new column appears)so we need the following line to make it consistent
#Until 2005 use the following lines
headlines<-df.json$response$docs$headline[1:2]
#As of 2006 the structure of the data follows an irregular pattern
#some months the headlines are presented as data frame
#and other months as nested lists. So we need the following conditional
#structure to deal with different data types
head.class<-class(headlines)
if (head.class=="data.frame"){
section<-df.json$response$docs$section_name
ifelse(year==2017&(month==2|month>=8),#month %in% c("2","8","9","10","11","12")
news.desk<-df.json$response$docs$new_desk,
news.desk<-df.json$response$docs$news_desk)
length(df.json$response$docs$new_desk)
#class(df.json$response$docs$new_desk)
date.pub<-ymd_hms(df.json$response$docs$pub_date)
}
if (head.class=="list"){
list.processed<-sapply(df.json$response$docs$headline,
function(l) c(l$main,l$kicker)[1:2])
headlines<-plyr::ldply(list.processed, rbind)
dims<-sapply(list.processed,FUN = length)
missing.headlines<-which(dims!=2)
section<-df.json$response$docs$section_name[-missing.headlines]
date.pub<-ymd_hms(df.json$response$docs$pub_date)[-missing.headlines]
news.desk<-df.json$response$docs$news_desk[-missing.headlines]
}
#I want to keep track of the data structures used
ds.used<-c(ds.used,paste0(year,"-",month," ",head.class))
#I extract the date and section name and add it to the data frame
headlines<-cbind(headlines,section, date.pub,news.desk)
colnames(headlines)<-c("main","kicker","section_name","pub_date","news_desks")
#the following 2 lines are to store the section and date as character
#in de data frame instead as a factor
headlines$section_name<-as.character(headlines$section_name)
headlines$pub_date<-substr(as.character(headlines$pub_date),1,10)
nyt.df<-rbind(nyt.df,headlines)
log.data<-c(year,month,head.class,length(headlines$pub_date))
print(log.data)
write(paste(year,month,head.class,length(headlines$pub_date),format(Sys.time()
, "%Y-%m-%d %H:%M")),"data_test/data_log.txt",append = T)
}
#I identify the headlines from the "Business" category
bus.indexes1<-str_detect(tolower(nyt.df$section_name), "business")
bus.indexes1[is.na(bus.indexes1)]<-F
bus.indexes2<-str_detect(tolower(nyt.df$news_desk), "(business|financial)")
bus.indexes2[is.na(bus.indexes2)]<-F
bus.indexes3<-str_detect(tolower(nyt.df$kicker), "(business|financial)")
bus.indexes3[is.na(bus.indexes3)]<-F
bus.indexes<-bus.indexes1 | bus.indexes2 | bus.indexes3
#I create a subset of the data frame with only the business headlines
nyt.df.bus<-nyt.df[bus.indexes,]
write.csv(nyt.df,paste0("data_test/nyt_headlines_",year,".csv"))
write.csv(nyt.df.bus,paste0("data_test/nyt_headlines_bus_",year,".csv"))
}
ds.used<-character()
for (year in c(2017:2017)){
#I create the empty data frame for the headlines
nyt.df<-data.frame()
for (month in c(1:12)){
url.nyt.archive<-paste0("https://api.nytimes.com/svc/archive/v1/",year,"/"
,month,".json","?api-key=",nyt.API.key)
df.json<-fromJSON(url.nyt.archive)
#I extract the headlines from the json file
#headlines<-df.json$response$docs$headline #use this until 2005
#The structure of df.json$response$docs$headline changes in 1995-03
#(a new column appears)so we need the following line to make it consistent
#Until 2005 use the following lines
headlines<-df.json$response$docs$headline[1:2]
#As of 2006 the structure of the data follows an irregular pattern
#some months the headlines are presented as data frame
#and other months as nested lists. So we need the following conditional
#structure to deal with different data types
head.class<-class(headlines)
if (head.class=="data.frame"){
section<-df.json$response$docs$section_name
ifelse(year==2017&(month==2|month>=8),#month %in% c("2","8","9","10","11","12")
news.desk<-df.json$response$docs$new_desk,
news.desk<-df.json$response$docs$news_desk)
length(df.json$response$docs$new_desk)
#class(df.json$response$docs$new_desk)
date.pub<-ymd_hms(df.json$response$docs$pub_date)
}
if (head.class=="list"){
list.processed<-sapply(df.json$response$docs$headline,
function(l) c(l$main,l$kicker)[1:2])
headlines<-plyr::ldply(list.processed, rbind)
dims<-sapply(list.processed,FUN = length)
missing.headlines<-which(dims!=2)
section<-df.json$response$docs$section_name[-missing.headlines]
date.pub<-ymd_hms(df.json$response$docs$pub_date)[-missing.headlines]
news.desk<-df.json$response$docs$news_desk[-missing.headlines]
}
#I want to keep track of the data structures used
ds.used<-c(ds.used,paste0(year,"-",month," ",head.class))
#I extract the date and section name and add it to the data frame
headlines<-cbind(headlines,section, date.pub,news.desk)
colnames(headlines)<-c("main","kicker","section_name","pub_date","news_desks")
#the following 2 lines are to store the section and date as character
#in de data frame instead as a factor
headlines$section_name<-as.character(headlines$section_name)
headlines$pub_date<-substr(as.character(headlines$pub_date),1,10)
nyt.df<-rbind(nyt.df,headlines)
log.data<-c(year,month,head.class,length(headlines$pub_date))
print(log.data)
write(paste(year,month,head.class,length(headlines$pub_date),format(Sys.time()
, "%Y-%m-%d %H:%M")),"data_test/data_log.txt",append = T)
}
#I identify the headlines from the "Business" category
bus.indexes1<-str_detect(tolower(nyt.df$section_name), "business")
bus.indexes1[is.na(bus.indexes1)]<-F
bus.indexes2<-str_detect(tolower(nyt.df$news_desk), "(business|financial)")
bus.indexes2[is.na(bus.indexes2)]<-F
bus.indexes3<-str_detect(tolower(nyt.df$kicker), "(business|financial)")
bus.indexes3[is.na(bus.indexes3)]<-F
bus.indexes<-bus.indexes1 | bus.indexes2 | bus.indexes3
#I create a subset of the data frame with only the business headlines
nyt.df.bus<-nyt.df[bus.indexes,]
write.csv(nyt.df,paste0("data_test/nyt_headlines_",year,".csv"))
write.csv(nyt.df.bus,paste0("data_test/nyt_headlines_bus_",year,".csv"))
}
ds.used<-character()
for (year in c(2017:2017)){
#I create the empty data frame for the headlines
nyt.df<-data.frame()
for (month in c(1:12)){
url.nyt.archive<-paste0("https://api.nytimes.com/svc/archive/v1/",year,"/"
,month,".json","?api-key=",nyt.API.key)
df.json<-fromJSON(url.nyt.archive)
#I extract the headlines from the json file
#headlines<-df.json$response$docs$headline #use this until 2005
#The structure of df.json$response$docs$headline changes in 1995-03
#(a new column appears)so we need the following line to make it consistent
#Until 2005 use the following lines
headlines<-df.json$response$docs$headline[1:2]
#As of 2006 the structure of the data follows an irregular pattern
#some months the headlines are presented as data frame
#and other months as nested lists. So we need the following conditional
#structure to deal with different data types
head.class<-class(headlines)
if (head.class=="data.frame"){
section<-df.json$response$docs$section_name
ifelse(year==2017&(month==2|month>=8),#month %in% c("2","8","9","10","11","12")
news.desk<-df.json$response$docs$new_desk,
news.desk<-df.json$response$docs$news_desk)
length(df.json$response$docs$new_desk)
#class(df.json$response$docs$new_desk)
date.pub<-ymd_hms(df.json$response$docs$pub_date)
}
if (head.class=="list"){
list.processed<-sapply(df.json$response$docs$headline,
function(l) c(l$main,l$kicker)[1:2])
headlines<-plyr::ldply(list.processed, rbind)
dims<-sapply(list.processed,FUN = length)
missing.headlines<-which(dims!=2)
section<-df.json$response$docs$section_name[-missing.headlines]
date.pub<-ymd_hms(df.json$response$docs$pub_date)[-missing.headlines]
news.desk<-df.json$response$docs$news_desk[-missing.headlines]
}
#I want to keep track of the data structures used
ds.used<-c(ds.used,paste0(year,"-",month," ",head.class))
#I extract the date and section name and add it to the data frame
headlines<-cbind(headlines,section, date.pub,news.desk)
colnames(headlines)<-c("main","kicker","section_name","pub_date","news_desks")
#the following 2 lines are to store the section and date as character
#in de data frame instead as a factor
headlines$section_name<-as.character(headlines$section_name)
headlines$pub_date<-substr(as.character(headlines$pub_date),1,10)
nyt.df<-rbind(nyt.df,headlines)
log.data<-c(year,month,head.class,length(headlines$pub_date))
print(log.data)
write(paste(year,month,head.class,length(headlines$pub_date),format(Sys.time()
, "%Y-%m-%d %H:%M")),"data_test/data_log.txt",append = T)
}
#I identify the headlines from the "Business" category
bus.indexes1<-str_detect(tolower(nyt.df$section_name), "business")
bus.indexes1[is.na(bus.indexes1)]<-F
bus.indexes2<-str_detect(tolower(nyt.df$news_desk), "(business|financial)")
bus.indexes2[is.na(bus.indexes2)]<-F
bus.indexes3<-str_detect(tolower(nyt.df$kicker), "(business|financial)")
bus.indexes3[is.na(bus.indexes3)]<-F
bus.indexes<-bus.indexes1 | bus.indexes2 | bus.indexes3
#I create a subset of the data frame with only the business headlines
nyt.df.bus<-nyt.df[bus.indexes,]
write.csv(nyt.df,paste0("data_test/nyt_headlines_",year,".csv"))
write.csv(nyt.df.bus,paste0("data_test/nyt_headlines_bus_",year,".csv"))
}
ds.used<-character()
for (year in c(2017:2017)){
#I create the empty data frame for the headlines
nyt.df<-data.frame()
for (month in c(1:12)){
url.nyt.archive<-paste0("https://api.nytimes.com/svc/archive/v1/",year,"/"
,month,".json","?api-key=",nyt.API.key)
df.json<-fromJSON(url.nyt.archive)
#I extract the headlines from the json file
#headlines<-df.json$response$docs$headline #use this until 2005
#The structure of df.json$response$docs$headline changes in 1995-03
#(a new column appears)so we need the following line to make it consistent
#Until 2005 use the following lines
headlines<-df.json$response$docs$headline[1:2]
#As of 2006 the structure of the data follows an irregular pattern
#some months the headlines are presented as data frame
#and other months as nested lists. So we need the following conditional
#structure to deal with different data types
head.class<-class(headlines)
if (head.class=="data.frame"){
section<-df.json$response$docs$section_name
ifelse(year==2017&(month==2|month>=8),#month %in% c("2","8","9","10","11","12")
news.desk<-df.json$response$docs$new_desk,
news.desk<-df.json$response$docs$news_desk)
length(df.json$response$docs$new_desk)
#class(df.json$response$docs$new_desk)
date.pub<-ymd_hms(df.json$response$docs$pub_date)
}
if (head.class=="list"){
list.processed<-sapply(df.json$response$docs$headline,
function(l) c(l$main,l$kicker)[1:2])
headlines<-plyr::ldply(list.processed, rbind)
dims<-sapply(list.processed,FUN = length)
missing.headlines<-which(dims!=2)
section<-df.json$response$docs$section_name[-missing.headlines]
date.pub<-ymd_hms(df.json$response$docs$pub_date)[-missing.headlines]
news.desk<-df.json$response$docs$news_desk[-missing.headlines]
}
#I want to keep track of the data structures used
ds.used<-c(ds.used,paste0(year,"-",month," ",head.class))
#I extract the date and section name and add it to the data frame
headlines<-cbind(headlines,section, date.pub,news.desk)
colnames(headlines)<-c("main","kicker","section_name","pub_date","news_desks")
#the following 2 lines are to store the section and date as character
#in de data frame instead as a factor
headlines$section_name<-as.character(headlines$section_name)
headlines$pub_date<-substr(as.character(headlines$pub_date),1,10)
nyt.df<-rbind(nyt.df,headlines)
log.data<-c(year,month,head.class,length(headlines$pub_date))
print(log.data)
write(paste(year,month,head.class,length(headlines$pub_date),format(Sys.time()
, "%Y-%m-%d %H:%M")),"data_test/data_log.txt",append = T)
}
#I identify the headlines from the "Business" category
bus.indexes1<-str_detect(tolower(nyt.df$section_name), "business")
bus.indexes1[is.na(bus.indexes1)]<-F
bus.indexes2<-str_detect(tolower(nyt.df$news_desk), "(business|financial)")
bus.indexes2[is.na(bus.indexes2)]<-F
bus.indexes3<-str_detect(tolower(nyt.df$kicker), "(business|financial)")
bus.indexes3[is.na(bus.indexes3)]<-F
bus.indexes<-bus.indexes1 | bus.indexes2 | bus.indexes3
#I create a subset of the data frame with only the business headlines
nyt.df.bus<-nyt.df[bus.indexes,]
write.csv(nyt.df,paste0("data_test/nyt_headlines_",year,".csv"))
write.csv(nyt.df.bus,paste0("data_test/nyt_headlines_bus_",year,".csv"))
}
ds.used<-character()
for (year in c(2017:2017)){
#I create the empty data frame for the headlines
nyt.df<-data.frame()
for (month in c(1:12)){
url.nyt.archive<-paste0("https://api.nytimes.com/svc/archive/v1/",year,"/"
,month,".json","?api-key=",nyt.API.key)
df.json<-fromJSON(url.nyt.archive)
#I extract the headlines from the json file
#headlines<-df.json$response$docs$headline #use this until 2005
#The structure of df.json$response$docs$headline changes in 1995-03
#(a new column appears)so we need the following line to make it consistent
#Until 2005 use the following lines
headlines<-df.json$response$docs$headline[1:2]
#As of 2006 the structure of the data follows an irregular pattern
#some months the headlines are presented as data frame
#and other months as nested lists. So we need the following conditional
#structure to deal with different data types
head.class<-class(headlines)
if (head.class=="data.frame"){
section<-df.json$response$docs$section_name
ifelse(year==2017&(month==2|month>=8),#month %in% c("2","8","9","10","11","12")
news.desk<-df.json$response$docs$new_desk,
news.desk<-df.json$response$docs$news_desk)
length(df.json$response$docs$new_desk)
#class(df.json$response$docs$new_desk)
date.pub<-ymd_hms(df.json$response$docs$pub_date)
}
if (head.class=="list"){
list.processed<-sapply(df.json$response$docs$headline,
function(l) c(l$main,l$kicker)[1:2])
headlines<-plyr::ldply(list.processed, rbind)
dims<-sapply(list.processed,FUN = length)
missing.headlines<-which(dims!=2)
section<-df.json$response$docs$section_name[-missing.headlines]
date.pub<-ymd_hms(df.json$response$docs$pub_date)[-missing.headlines]
news.desk<-df.json$response$docs$news_desk[-missing.headlines]
}
#I want to keep track of the data structures used
ds.used<-c(ds.used,paste0(year,"-",month," ",head.class))
#I extract the date and section name and add it to the data frame
headlines<-cbind(headlines,section, date.pub,news.desk)
colnames(headlines)<-c("main","kicker","section_name","pub_date","news_desks")
#the following 2 lines are to store the section and date as character
#in de data frame instead as a factor
headlines$section_name<-as.character(headlines$section_name)
headlines$pub_date<-substr(as.character(headlines$pub_date),1,10)
nyt.df<-rbind(nyt.df,headlines)
log.data<-c(year,month,head.class,length(headlines$pub_date))
print(log.data)
write(paste(year,month,head.class,length(headlines$pub_date),format(Sys.time()
, "%Y-%m-%d %H:%M")),"data_test/data_log.txt",append = T)
}
#I identify the headlines from the "Business" category
bus.indexes1<-str_detect(tolower(nyt.df$section_name), "business")
bus.indexes1[is.na(bus.indexes1)]<-F
bus.indexes2<-str_detect(tolower(nyt.df$news_desk), "(business|financial)")
bus.indexes2[is.na(bus.indexes2)]<-F
bus.indexes3<-str_detect(tolower(nyt.df$kicker), "(business|financial)")
bus.indexes3[is.na(bus.indexes3)]<-F
bus.indexes<-bus.indexes1 | bus.indexes2 | bus.indexes3
#I create a subset of the data frame with only the business headlines
nyt.df.bus<-nyt.df[bus.indexes,]
write.csv(nyt.df,paste0("data_test/nyt_headlines_",year,".csv"))
write.csv(nyt.df.bus,paste0("data_test/nyt_headlines_bus_",year,".csv"))
}
